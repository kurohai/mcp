# mysite_uwsgi.ini file
[uwsgi]

ini             =   :base


# port to serve app
http            =   0.0.0.0:8086

# the base directory (full path)
chdir           =   %(project-dir)
workdir         =   %(project-dir)
home            =   %(project-dir)
pythonhome      =   %(project-dir)
pythonpath      =   %(app-dir)

# the virtualenv (full path)
virtualenv      =   %(venv-dir)

# wsgi file or module and flask or Django app
module          =   mcp.wsgi
callable        =   app

# reload uwsgi when a file changes
py-autoreload   =   1

# process-related settings
master          =   true

# maximum number of worker processes
processes       =   4

# the socket (use the full path to be safe
; socket          =   %(project-dir)/%(project-name).sock
socket          =   /tmp/uwsgi.sock

# ... with appropriate permissions - may be needed
chmod-socket    =   666

# clear environment on exit
vacuum          =   true

# enable stats over http
stats-http      =   true
stats           =   0.0.0.0:9000

# logging
daemonize       =   %(project-dir)/uwsgi.log
log-format      =   %(addr) - %(user) [%(ltime)] "%(method) %(uri) %(proto)" %(status) %(size) "%(referer)" "%(uagent)"
maxsize         =   2000000


[base]
; plugin          =   python,http

# project variables
project-dir     =   $(PWD)
project-name    =   mcp
app-dir         =   %(project-dir)/%(project-name)
; venv-name       =   %(project-dir)/.venv
venv-dir        =   $(VIRTUAL_ENV)
; util-app        =   %(app-dir)/controller

# respawn processes after serving 5000 requests
max-requests = 2000

# respawn processes taking more than 20 seconds
harakiri = 20








; mount = /hdmi=%(app-dir)/wsgi.py
; mountpoint      =   /hdmi
; wsgi-file       =   /mnt/data/code/hdmi-control-ui/project/wsgi.py
; wsgi-file       =   %(app-dir)/wsgi.py

; home            =   /mnt/data/code/hdmi-control-ui
; home            =   %(venv-dir)
